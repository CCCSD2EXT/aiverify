enum ModelAccessType {
  File
  Folder
  Pipeline
  API
}

enum ModelType {
    Classification
    Regression
}

enum ModelFileStatusType {
  Pending
  Valid
  Invalid
  Error
  Cancelled
}

type ModelFile {
    id: ObjectID!
    name: String!
    type: ModelAccessType!
    filename: String # if type is not API
    filePath: String # if type is not API
    modelAPI: ModelAPIType # if type is API
    ctime: DateTime
    description: String
    status: ModelFileStatusType
    size: String
    modelType: ModelType
    serializer: String
    modelFormat: String
    errorMessages: String
}

input ModelFileInput {
    # id: ObjectID
    # filename: String
    name: String @constraint(minLength: 0, maxLength: 128)
    # filePath: String
    # ctime: DateTime
    description: String @constraint(minLength: 0, maxLength: 256)
    # status: ModelFileStatusType
    # size: String
    modelType: ModelType
    # serializer: String
    # modelFormat: String
    # errorMessages: String
    # type: String
}

type Query {
  # return list of modelfiles
  modelFiles: [ModelFile]
}

type Mutation {
  # delete files
  deleteModelFile(id: ObjectID!): ObjectID
  updateModel(modelFileID: ObjectID!, modelFile: ModelFileInput): ModelFile
}

type ModelFileStatusUpdate {
  _id: String
  filename: String
  status: ModelFileStatusType
  serializer: String
  modelFormat: String
  errorMessages: String
}

type Subscription {
	validateModelStatusUpdated: ModelFileStatusUpdate 
}
