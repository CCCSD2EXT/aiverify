#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#  name: portal-plugins-pvc
#  namespace: dev
#  labels:
#    app.kubernetes.io/name: portal-plugins-pvc
#spec:
#  accessModes:
#    - ReadWriteMany
#  resources:
#    requests:
#      storage: 1Gi
#  storageClassName: efs-fs
#---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: aiverify-data-pvc
  namespace: dev
  labels:
    app.kubernetes.io/name: aiverify-data-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
  storageClassName: efs-fs
#---
#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#  name: portal-model-pvc
#spec:
#  accessModes:
#    - ReadWriteOnce
#  resources:
#    requests:
#      storage: 2Gi
#  storageClassName: ebs-gp2
#---
#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#  name: portal-logs-pvc
#spec:
#  accessModes:
#    - ReadWriteOnce
#  resources:
#    requests:
#      storage: 1Gi
#  storageClassName: ebs-gp2
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: aiverify-portal-config
  namespace: dev
data:
  # portal env
  DB_HOST: aiverify-db-service.dev.svc.cluster.local
  DB_PORT: '27017'
  REDIS_URI: redis://aiverify-redis-service.dev.svc.cluster.local
  # api-gw env
  REDIS_HOST: aiverify-redis-service.dev.svc.cluster.local
  REDIS_PORT: '6379'
  TEST_ENGINE_URL: http://localhost:8080
  ALLOWED_ORIGINS: https://aiverify.eks-dev.aipo-imda.net
---
apiVersion: v1
kind: Service
metadata:
  name: aiverify-portal-service
  namespace: dev
spec:
  ports:
    - name: aiverify-portal-http
      port: 80
      protocol: TCP
      targetPort: 3000
  selector:
    app.kubernetes.io/name: aiverify-portal
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aiverify-portal-deployment
  namespace: dev
  labels:
    app.kubernetes.io/name: aiverify-portal
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: aiverify-portal
  template:
    metadata:
      labels:
        app.kubernetes.io/name: aiverify-portal
    spec:
      serviceAccountName: default
      securityContext:
        runAsUser: 10000
        runAsGroup: 10000
        fsGroup: 10000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
#      initContainers:
#        - name: init-plugins-dir
#          image: public.ecr.aws/docker/library/busybox:latest  # Use an image with basic tools like 'cp'
#          command: [ 'sh', '-c', 'cp -r /app/aiverify/ai-verify-portal/plugins/* /target/' ]
#          volumeMounts:
#            - name: shared-plugins
#              mountPath: /target
      containers:
        - name: aiverify-portal
          image: 052567997892.dkr.ecr.ap-southeast-1.amazonaws.com/ecr-aiss-aiverify:cs.23
          args:
            - "bash"
            - "-c"
            - "cd aiverify/ai-verify-apigw && node app.mjs & cd aiverify/ai-verify-portal && npm run start"
          env:
          - name: MONGO_USERNAME
            valueFrom:
              secretKeyRef:
                name: db-secret
                key: username
          - name: MONGO_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db-secret
                key: password
          envFrom:
          - configMapRef:
              name: aiverify-portal-config
          resources:
            limits:
              cpu: 1000m
              memory: 2048Mi
            requests:
              cpu: 500m
              memory: 1024Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
                drop:
                  ["ALL"]
          imagePullPolicy: IfNotPresent
          volumeMounts:
#            - name: shared-plugins
#              mountPath: /app/aiverify/ai-verify-portal/plugins
            - name: aiverify-shared-data
              mountPath: /app/aiverify/uploads/data
              subPath: data
            - name: aiverify-shared-data
              mountPath: /app/aiverify/uploads/model
              subPath: model
#            - name: shared-logs
#              mountPath: /app/aiverify/test-engine-app/logs
      volumes:
#        - name: shared-plugins
#          persistentVolumeClaim:
#            claimName: portal-plugins-pvc
        - name: aiverify-shared-data
          persistentVolumeClaim:
            claimName: aiverify-data-pvc
#        - name: shared-model
#          persistentVolumeClaim:
#            claimName: portal-model-pvc
#        - name: shared-logs
#          persistentVolumeClaim:
#            claimName: portal-logs-pvc

