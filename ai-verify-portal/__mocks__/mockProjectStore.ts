import { ProjectTemplateStore } from 'src/modules/projectTemplate/projectTemplateContext';

export const mockProjectStoreForCanvasTest: ProjectTemplateStore = {
  addReportWidget: jest.fn,
  cancelTestRuns: jest.fn,
  createProject: jest.fn,
  createProjectTemplate: jest.fn,
  deletePage: jest.fn,
  dispatchGlobalVars: jest.fn,
  dispatchInputBlockData: jest.fn,
  dispatchModelAndDatasets: jest.fn,
  dispatchPages: jest.fn,
  dispatchReportWidgetComponents: jest.fn,
  dispatchTestInformationData: jest.fn,
  dispatchWidgetBundleCache: jest.fn,
  exportTemplate: jest.fn,
  flushAllUpdates: jest.fn,
  generateReport: jest.fn,
  id: '64c5b4f0754b20f8e6a3af91',
  inputBlockData: {},
  isAlgorithmValid: jest.fn,
  isNew: false,
  isReadonly: false,
  lastSavedTime: null,
  mapReducer: jest.fn,
  modelAndDatasets: {
    groundTruthColumn: null,
    model: null,
    testDataset: null,
    groundTruthDataset: null,
  },
  pages: [
    {
      __typename: 'Page',
      layouts: [],
      reportWidgets: [],
    },
  ],

  pluginManager: {
    plugins: [
      {
        gid: 'aiverify.stock.decorators',
        name: 'AI Verify Stock Decorators',
        version: '1.0.0',
        reportWidgets: [
          {
            cid: 'divider',
            name: 'Divider',
            tags: ['stock', 'decorator'],
            properties: [],
            widgetSize: {
              minW: 1,
              minH: 1,
              maxW: 12,
              maxH: 1,
            },
            dependencies: [],
            mockdata: [],
            type: 'ReportWidget',
            gid: 'aiverify.stock.decorators:divider',
            version: '1.0.0',
            pluginGID: 'aiverify.stock.decorators',
            mdxPath: 'stock.decorators/widgets/divider.mdx',
            status: 'OK',
          },
          {
            cid: 'header1',
            name: 'Header 1',
            tags: ['stock', 'decorator', 'header'],
            properties: [
              {
                key: 'title',
                helper: 'Enter the header title',
                default: '',
              },
              {
                key: 'text',
                helper: 'Enter the text for paragraph below header',
                default: '',
              },
            ],
            widgetSize: {
              minW: 1,
              minH: 2,
              maxW: 12,
              maxH: 36,
            },
            dependencies: [],
            mockdata: [],
            type: 'ReportWidget',
            gid: 'aiverify.stock.decorators:header1',
            version: '1.0.0',
            pluginGID: 'aiverify.stock.decorators',
            mdxPath: 'stock.decorators/widgets/header1.mdx',
            status: 'OK',
          },
        ],
        isStock: true,
        installedAt: 1688098059192,
      },
    ],
    inputBlocks: [],
    algorithms: [],
    templates: [],
    stockPlugins: [
      'aiverify.stock.accumulated_local_effect',
      'aiverify.stock.partial_dependence_plot',
      'aiverify.stock.fairness_metrics_toolbox_for_classification',
      'aiverify.stock.fairness_metrics_toolbox_for_regression',
      'aiverify.stock.shap_toolbox',
      'aiverify.stock.robustness_toolbox',
      'aiverify.stock.image_corruption_toolbox',
      'aiverify.stock.decorators',
      'aiverify.stock.process_checklist',
      'aiverify.stock.reports',
    ],
  },
  projectInfo: {
    __typename: 'ProjectInformation',
    name: 'Mock Project Name',
    description: 'Mock Project Description',
    reportTitle: 'Mock Project Title',
    company: 'Mock Project Company',
  },
  projectMode: true,
  removeReportWidget: jest.fn,
  reportStatus: 'NotGenerated',
  reportWidgetComponents: {},
  requireGroundTruth: false,
  saveProjectAsTemplate: jest.fn,
  setId: jest.fn,
  setIsNew: jest.fn,
  setLastSavedTime: jest.fn,
  testInformationData: {},
  globalVars: [],
  updateReducer: jest.fn,
  widgetBundleCache: {},
  widgetProperties: {
    getProperty: jest.fn,
    combinedGlobalVars: [
      {
        key: 'name',
        value: 'Mock Project Name',
      },
      {
        key: 'description',
        value: 'Mock Project Description',
      },
      {
        key: 'reportTitle',
        value: 'Mock Project Title',
      },
      {
        key: 'company',
        value: 'Mock Project Company',
      },
    ],
  },
  dependencies: {
    algorithms: [],
    inputBlocks: [],
    missing: [],
  },
  dependency2ReportWidgetsMap: {},
};
