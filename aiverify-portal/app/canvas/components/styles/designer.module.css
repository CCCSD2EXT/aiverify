.reportRoot {
  @apply text-black text-[14px]
}

.reportContainer {
  --zoom-level: 1;
  --A4-page-width: calc(794px * var(--zoom-level));
  --A4-page-padding: calc(10px * var(--zoom-level));
  --A4-page-height: calc(1100px * var(--zoom-level));
  /* 
	Page height: Based on aspect-ratio, relative to width 794px, it should be 1123px. 
	That computes to 36 number of rows (30px per row), with padding 10px factored in.
	That leaves a bit of space leftover.
	So, just use exact height value of 36 rows * 30px to remove the leftover from screen
	*/
  @apply w-[--A4-page-width] scroll-mt-[calc(100px*var(--zoom-level))];
}

.reportHeight {
  @apply h-[--A4-page-height];
}

.printPage {
  /* 
	Print page width factors in padding left and padding right - 10px each, that we see on canvas.
	Not using padding attribute here to prevent the page number that gets printed by pdf generator, to be flushed right to the edge
	*/
  @apply w-[calc(var(--A4-page-width)-var(--A4-page-padding)-var(--A4-page-padding))];
}

.canvas {
  --zoom-level: 1;
  --A4-canvas-width: calc(794px * var(--zoom-level));
  --A4-canvas-padding: calc(10px * var(--zoom-level));
  --A4-canvas-height: calc(1100px * var(--zoom-level));
  /* 
	Canvas height: Based on aspect-ratio, relative to width 794px, it should be 1123px. 
	That computes to 36 number of rows (30px per row), with padding 10px factored in.
	That leaves a bit of space leftover.
	So, just use exact height value of 36 rows * 30px to remove the leftover from screen
	*/
  @apply relative bg-white mb-[50px] shadow p-[--A4-canvas-padding];
}

.canvas_grid {
  @apply absolute;
  --grid-row-height: calc(30px * var(--zoom-level));
  --grid-line-color: #d9d8d8;
  --grid-container-width: calc(var(--A4-canvas-width) - var(--A4-canvas-padding) * 2);
  --grid-container-height: calc(var(--A4-canvas-height) + 1px - var(--A4-canvas-padding) * 2);
  @apply left-[--A4-canvas-padding] top-[--A4-canvas-padding] w-[--grid-container-width] h-[--grid-container-height];
  background-image: repeating-linear-gradient(
      var(--grid-line-color) 0 1px,
      transparent 1px 100%
    ),
    repeating-linear-gradient(
      90deg,
      var(--grid-line-color) 0 1px,
      transparent 1px 100%
    );
  background-size: calc(calc(100% - 0.03em) / 12) var(--grid-row-height);
}

.gridItem_dheightNote {
  @apply flex items-center rounded-[2px] shadow-[0px_0px_4px_0px_rgba(0,0,0,0.2)] bg-white mb-[5px] text-[13px] w-[130px];
}

@keyframes animateHeight {
  from {
    transform: scaleY(1);
  }

  to {
    transform: scaleY(1.3);
  }
}

.dynHeightIndicator {
  @apply absolute text-[--color-palette-violet-red];
  animation-duration: 0.3s;
  animation-name: animateHeight;
  animation-iteration-count: infinite;
  animation-direction: alternate;
}

.noDrag {
  @apply select-none;
  -webkit-user-drag: none;
  -khtml-user-drag: none;
  -moz-user-drag: none;
  -o-user-drag: none;
  user-drag: none;
}

.canvas h1,
.h1TextInput {
  @apply text-black text-2xl;
}

.canvas h2,
.h2TextInput {
  @apply text-black text-xl;
}

.canvas h3,
.h3TextInput {
  @apply text-red-500 text-lg;
}

.canvas h4,
.h4TextInput {
  @apply text-black text-base;
}

.canvas p,
.pTextInput {
  @apply text-black text-sm;
}
