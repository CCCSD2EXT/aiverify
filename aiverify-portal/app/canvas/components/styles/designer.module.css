.reportRoot {
  @apply text-black text-[14px]
}

.reportContainer {
  --A4-page-width: 794px;
  --A4-page-padding: 10px;
  --A4-page-height: 1100px;
  /* 
	Page height: Based on aspect-ratio, relative to width 794px, it should be 1123px. 
	That computes to 36 number of rows (30px per row), with padding 10px factored in.
	That leaves a bit of space leftover.
	So, just use exact height value of 36 rows * 30px to remove the leftover from screen
	*/
  width: var(--A4-page-width);
}

.reportHeight {
  height: var(--A4-page-height);
}

.printPage {
  /* 
	Print page width factors in padding left and padding right - 10px each, that we see on canvas.
	Not using padding attribute here to prevent the page number that gets printed by pdf generator, to be flushed right to the edge
	*/
  width: calc(
    var(--A4-page-width) - var(--A4-page-padding) - var(--A4-page-padding)
  );
}

.canvas {
  --A4-canvas-width: 794px;
  --A4-canvas-padding: 10px;
  --A4-canvas-height: 1100px;
  /* 
	Canvas height: Based on aspect-ratio, relative to width 794px, it should be 1123px. 
	That computes to 36 number of rows (30px per row), with padding 10px factored in.
	That leaves a bit of space leftover.
	So, just use exact height value of 36 rows * 30px to remove the leftover from screen
	*/
  padding: var(--A4-canvas-padding);
  @apply relative bg-white mb-[50px] shadow;
}

.canvas_grid {
  @apply absolute;
  --grid-row-height: 30px;
  --grid-line-color: #d9d8d8;
  --grid-container-width: calc(
    var(--A4-canvas-width) - var(--A4-canvas-padding) * 2
  );
  --grid-container-height: calc(
    var(--A4-canvas-height) + 1px - var(--A4-canvas-padding) * 2
  );
  left: var(--A4-canvas-padding);
  top: var(--A4-canvas-padding);
  width: var(--grid-container-width);
  height: var(--grid-container-height);
  background-image: repeating-linear-gradient(
      var(--grid-line-color) 0 1px,
      transparent 1px 100%
    ),
    repeating-linear-gradient(
      90deg,
      var(--grid-line-color) 0 1px,
      transparent 1px 100%
    );
  background-size: calc(calc(100% - 0.03em) / 12) var(--grid-row-height);
}

.gridItem_dheightNote {
  display: flex;
  align-items: center;
  border-radius: 2px;
  box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.2);
  background: var(--color-white);
  margin-bottom: 5px;
  font-size: 13px;
  width: 130px;
}

@keyframes animateHeight {
  from {
    transform: scaleY(1);
  }

  to {
    transform: scaleY(1.3);
  }
}

.dynHeightIndicator {
  position: absolute;
  color: var(--color-palette-violet-red);
  animation-duration: 0.3s;
  animation-name: animateHeight;
  animation-iteration-count: infinite;
  animation-direction: alternate;
}

.noDrag {
  -webkit-user-drag: none;
  -khtml-user-drag: none;
  -moz-user-drag: none;
  -o-user-drag: none;
  user-drag: none;
}
