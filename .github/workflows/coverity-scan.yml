name: v2 Coverity Scan

on:
  
  pull_request:
    types: [ assigned, synchronize ]
    branches:
      - 'v2.x'

  workflow_dispatch:
    inputs:
      branch_to_test:
        description: 'Branch or tag to run test'
        required: true
        default: 'v2.x'
        type: string
  
  push:
    branches: [ 'v2.x' ]

jobs:
  Coverity:
    if: (github.event_name == 'pull_request' && github.event.pull_request.assignee != null) || github.event_name == 'workflow_dispatch' || github.event_name == 'push'
    runs-on: ubuntu-latest

    env:
      COV_URL: ${{ secrets.COV_URL }}
      COV_USER: ${{ secrets.COV_USER }}
      COVERITY_PASSPHRASE: ${{ secrets.COVERITY_PASSPHRASE }}
      CSA_URL: ${{ secrets.CSA_URL }}
      COVERITY_PROJECT: aiverify-2.x
      COVERITY_STREAM: aiverify-2.x
      COVERITY_VIEW: Branch View
      CHECKERS: --webapp-security
      
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Coverity Download
      run: |
        
        # curl -fLsS --user $COV_USER:$COVERITY_PASSPHRASE $COV_URL/downloadFile.htm?fn=$CSA.tar.gz | tar -C /tmp -xzf -
        # curl -fLsS --user $COV_USER:$COVERITY_PASSPHRASE -o /tmp/$CSA/bin/license.dat $COV_URL/downloadFile.htm?fn=license.dat
        # /tmp/$CSA/bin/cov-configure --java

        curl -LO $CSA_URL
        ls
        unzip bridge-cli-linux64

        bridge-cli --stage connect \ 
          coverity.connect.url=$COV_URL \
          coverity.connect.project.name=$COVERITY_PROJECT \ 
          coverity.connect.stream.name=$COVERITY_STREAM \ 
          coverity.connect.policy.view=$COVERITY_VIEW

    # - name: Coverity Full Scan
    #   run: |
    #     export PATH=$PATH:/tmp/$CSA/bin
    #     set -x
    #     coverity capture
    #     cov-analyze --dir idir --all --all-security --strip-path $GITHUB_WORKSPACE $CHECKERS
    #     cov-commit-defects --dir idir --ticker-mode none --url $COV_URL --stream aiverify-2.x --scm git \
    #       --description $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID --target $RUNNER_OS --version $GITHUB_SHA

    # - name: Coverity Quality Gate
    #   if: ${{ github.event_name != 'pull_request' }}
    #   run: |
    #     curl -fLsS --user $COV_USER:$COVERITY_PASSPHRASE $COV_URL/api/viewContents/issues/v1/OWASP%20Web%20Top%2010?projectId=$COVERITY_PROJECT > results.json
    #     if [ $(cat results.json | jq .viewContentsV1.totalRows) -ne 0 ]; then cat results.json | jq .viewContentsV1.rows; exit 1; fi

    # - id: changeset
    #   name: Get Pull Request Changeset
    #   uses: jitterbit/get-changed-files@v1
    #   if: ${{ github.event_name == 'pull_request' }}

    # - name: Coverity Incremental Scan
    #   if: ${{ github.event_name == 'pull_request' && steps.changeset.outputs.added_modified != '' }}
    #   run: |
    #     export PATH=$PATH:/tmp/$CSA/bin
    #     set -x
    #     cov-run-desktop --dir idir --url $COV_URL --stream aiverify-2.x --build $BLDCMD
    #     cov-run-desktop --dir idir --url $COV_URL --stream aiverify-2.x --present-in-reference false \
    #       --ignore-uncapturable-inputs true --exit1-if-defects true ${{ steps.changeset.outputs.added_modified }}