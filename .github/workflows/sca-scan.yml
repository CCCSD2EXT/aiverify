# SCA Scan

name: Software Composition Analysis

on:
 # Runs when a pull request review is being submitted
  pull_request_review:
   types: [submitted]
   branches:
     - 'main'
     - 'v0.*'

  # Run this workflow manually from Actions tab
  workflow_dispatch:
    inputs:
      branch_to_test:
        description: 'Branch or tag to run test'
        required: true
        default: 'main'
        type: string

# Allow one concurrent deployment
concurrency:
  group: ${{ github.repository }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  software-composition-analysis:

    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:

    - name: Checkout Code (Pull_Request_Review)
      if: github.event_name == 'pull_request_review' || github.event_name == 'workflow_dispatch'
      uses: actions/checkout@v3
    - name: Black Duck Scan
      uses: synopsys-sig/synopsys-action@v1.9.0
      with:
          ### GitHub Checkout
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          submodules: recursive

          ### SCANNING: Required Fields
          blackduck_url: https://blackduck.aipo-imda.net/
          blackduck_token: ${{ secrets.BLACKDUCK_TOKEN }}
          blackduck_project_name: ai-verify-apigw
          blackduck_project_version_name: $(date +"%d-%m-%Y")
          blackduck_detector_search_depth: 10 
          blackduck_source_path: .
          blackduck_code_location_name: ai-verify-apigw_$(date + "%d-%m-%Y")
          blackduck_excluded_directories: /tests 
          blackduck.trust.cert: true
          blackduck_policy_check_fail_on_severities: CRITICAL

          ### SARIF report generation and upload to GitHub Adavanced Security: Uncomment below to enable
          blackduck_reports_sarif_create: true # Create Black Duck SARIF report and upload it as artifact
          blackduck_upload_sarif_report: true  # Upload Black Duck SARIF report in GitHub Advanced Security tab
          github_token: ${{ secrets.GITHUB_TOKEN }} # Required when blackduck_upload_sarif_report is set as true

    # - name: Install & Scan APIGW
    #   run: |
    #       cd ai-verify-apigw
    #       npm install
    #       bash <(curl -s -L https://detect.synopsys.com/detect9.sh) --blackduck.url=https://blackduck.aipo-imda.net/ --blackduck.api.token=${{ secrets.BLACKDUCK_TOKEN }} --detect.detector.search.depth=10 --detect.project.name=ai-verify-apigw --detect.project.version.name=$(date +"%d-%m-%Y") --detect.source.path=. --detect.code.location.name="ai-verify-apigw_$(date +"%d-%m-%Y")" --detect.excluded.directories=/tests --blackduck.trust.cert=true
    #       cd ../
          
    # - name: Install & Scan PORTAL
    #   run: |
    #       cd ai-verify-portal
    #       npm install
    #       bash <(curl -s -L https://detect.synopsys.com/detect9.sh) --blackduck.url=https://blackduck.aipo-imda.net/ --blackduck.api.token=${{ secrets.BLACKDUCK_TOKEN }} --detect.detector.search.depth=10 --detect.project.name=ai-verify-portal --detect.project.version.name=$(date +"%d-%m-%Y") --detect.source.path=. --detect.code.location.name="ai-verify-portal_$(date +"%d-%m-%Y")" --detect.excluded.directories=/tests --blackduck.trust.cert=true
    #       cd ../

    # - name: Install & Scan SHARED LIBRARY
    #   run: |
    #       cd ai-verify-shared-library
    #       npm install
    #       bash <(curl -s -L https://detect.synopsys.com/detect9.sh) --blackduck.url=https://blackduck.aipo-imda.net/ --blackduck.api.token=${{ secrets.BLACKDUCK_TOKEN }} --detect.detector.search.depth=10 --detect.project.name=ai-verify-shared-library --detect.project.version.name=$(date +"%d-%m-%Y") --detect.source.path=. --detect.code.location.name="ai-verify-shared-library_$(date +"%d-%m-%Y")" --detect.excluded.directories=/tests --blackduck.trust.cert=true
    #       cd ../

    # - name: Install & Scan TEST ENGINE APP
    #   run: |
    #       cd test-engine-app
    #       python3 -m venv venv
    #       source venv/bin/activate
    #       pip install -r requirements.txt
    #       bash <(curl -s -L https://detect.synopsys.com/detect9.sh) --blackduck.url=https://blackduck.aipo-imda.net/ --blackduck.api.token=${{ secrets.BLACKDUCK_TOKEN }} --detect.detector.search.depth=10 --detect.project.name=test-engine-app --detect.project.version.name=$(date +"%d-%m-%Y") --detect.source.path=. --detect.code.location.name="test-engine-app_$(date +"%d-%m-%Y")" --detect.excluded.directories=/tests --blackduck.trust.cert=true
    #       cd ../

    # - name: Install & Scan TEST ENGINE CORE
    #   run: |
    #       cd test-engine-core
    #       python3 -m venv venv
    #       source venv/bin/activate
    #       pip install -r requirements.txt
    #       bash <(curl -s -L https://detect.synopsys.com/detect9.sh) --blackduck.url=https://blackduck.aipo-imda.net/ --blackduck.api.token=${{ secrets.BLACKDUCK_TOKEN }} --detect.detector.search.depth=10 --detect.project.name=test-engine-core --detect.project.version.name=$(date +"%d-%m-%Y") --detect.source.path=. --detect.code.location.name="test-engine-core_$(date +"%d-%m-%Y")" --detect.excluded.directories=/tests --blackduck.trust.cert=true
    #       cd ../

    # - name: Install & Scan TEST ENGINE CORE MODULES
    #   run: |
    #       cd test-engine-core-modules
    #       python3 -m venv venv
    #       source venv/bin/activate
    #       pip install -r requirements.txt
    #       bash <(curl -s -L https://detect.synopsys.com/detect9.sh) --blackduck.url=https://blackduck.aipo-imda.net/ --blackduck.api.token=${{ secrets.BLACKDUCK_TOKEN }} --detect.detector.search.depth=10 --detect.project.name=test-engine-core-modules --detect.project.version.name=$(date +"%d-%m-%Y") --detect.source.path=. --detect.code.location.name="test-engine-core-modules_$(date +"%d-%m-%Y")" --detect.excluded.directories=/tests --blackduck.trust.cert=true
    #       cd ../

    # - name: Install & Scan STOCK PLUGINS
    #   run: |
    #       cd stock-plugins
    #       python3 -m venv venv
    #       source venv/bin/activate
    #       find ./ -type f -name 'requirements.txt' -exec pip install -r "{}" \;
    #       bash <(curl -s -L https://detect.synopsys.com/detect9.sh) --blackduck.url=https://blackduck.aipo-imda.net/ --blackduck.api.token=${{ secrets.BLACKDUCK_TOKEN }} --detect.detector.search.depth=10 --detect.project.name=test-engine-core --detect.project.version.name=$(date +"%d-%m-%Y") --detect.source.path=. --detect.code.location.name="stock-plugins_$(date +"%d-%m-%Y")" --detect.excluded.directories=/tests --blackduck.trust.cert=true
    #       cd ../
