# Integration Tests
# Build aiverify and run QA test suites

name: v2 Integration Tests

on:
  # Runs when a pull request review is being submitted
  pull_request:
    types: [assigned, synchronize]
    branches:
      - "main"

  # Run this workflow manually from Actions tab
  workflow_dispatch:
    inputs:
      branch_to_test:
        description: "Branch or tag to run test"
        required: true
        default: "main"
        type: string

  push:
    branches:
      - "main"

# Allow one concurrent deployment
concurrency:
  group: ${{ github.repository }}-${{ github.workflow }}
  cancel-in-progress: false

jobs:
  integration-test:
    #  Run only when PR is approved
    if: (github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' || github.event_name == 'push')
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          repository: aiverify-foundation/aiverify

      - name: Checkout Integration Test Code
        uses: actions/checkout@v4
        with:
          repository: aiverify-foundation/frontend-testing
          ref: v2.x
          path: qa-test/frontend-testing

      - name: Build & RUN PORTAL, APIGW & Test Engine Worker
        run: |
          cd deployment/docker-compose-prod
          ls -la
          COMPOSE_DOCKER_CLI_BUILD=1 DOCKER_BUILDKIT=1 docker compose --profile portal up -d
          bash ${GITHUB_WORKSPACE}/.ci/free_disk_space.sh
          COMPOSE_DOCKER_CLI_BUILD=1 DOCKER_BUILDKIT=1 docker compose --profile automated-tests-venv up -d
          cd ${GITHUB_WORKSPACE}

      - name: Run Integration Test
        if: ${{ ! cancelled() }}
        run: |
          cd qa-test/frontend-testing
          npm install
          npx playwright install --with-deps
          ENVIRONMENT_URL=http://127.0.0.1:3000 npx playwright test

      # - name: Run backend tests
      #   if: ${{ ! cancelled() }}
      #   run: |
      #     cd qa-test/backend-testing
      #     npm install
      #     BASEDIR=${{ github.workspace }} npx playwright test

      # - name: Show logs
      #   if: ${{ ! cancelled() }}
      #   run: |
      #     echo "================= Start of test-engine log ================="
      #     cat test-engine-app/engine.log
      #     echo "================= Start of apigw log ================="
      #     cat ai-verify-apigw/apigw.log
      #     echo "================= Start of portal log ================="
      #     cat ai-verify-portal/portal.log