# Integration Tests
# Build aiverify and run QA test suites

name: v2 Integration Tests

env:
  AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
  AWS_REGION: ${{ vars.AWS_REGION }}
  AWS_CONTAINER_REPOSITORY: ${{ vars.AWS_CONTAINER_REPOSITORY }}
  GITHUB_TOKEN: ${{ github.token }}

on:
  # Runs when a pull request review is being submitted
  pull_request:
    types: [assigned, synchronize]
    branches:
      - "main"

  # Run this workflow manually from Actions tab
  workflow_dispatch:
    inputs:
      branch_to_test:
        description: "Branch or tag to run test"
        required: true
        default: "main"
        type: string

  push:
    branches:
      - "main"

# Allow one concurrent deployment
concurrency:
  group: ${{ github.repository }}-${{ github.workflow }}
  cancel-in-progress: false

jobs:
  integration-test:
    #  Run only when PR is approved
    if: (github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' || github.event_name == 'push')
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      id-token: write

    steps:
      
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          repository: aiverify-foundation/aiverify

      - name: Checkout Integration Test Code
        uses: actions/checkout@v4
        with:
          ref: main
          repository: aiverify-foundation/aivt-integration-testing
          path: integration-testing

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2      

      - name: Build & RUN PORTAL, APIGW & Test Engine Worker
        run: |
          echo "Pull AI Verify APIGW Image"
          docker pull $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$AWS_CONTAINER_REPOSITORY/aiverify-apigw

          echo "Pull AI Verify Test Engine Worker Image"
          docker pull $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$AWS_CONTAINER_REPOSITORY/aiverify-test-engine-worker

          echo "Pull AI Verify Portal Image"
          docker pull $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$AWS_CONTAINER_REPOSITORY/aiverify-portal

      # - name: Run Integration Test
      #   if: ${{ ! cancelled() }}
      #   run: |
      #     cd integration-testing
      #     npm ci
      #     # bash ${GITHUB_WORKSPACE}/.ci/free_disk_space.sh
      #     npx playwright install --with-deps
      #     URL=http://127.0.0.1 PORT_NUMBER=3000 ROOT_FOLDER=${GITHUB_WORKSPACE}/stock-plugins/user_defined_files npx playwright test tests/portal/workflows.spec.js

      # - name: Run backend tests
      #   if: ${{ ! cancelled() }}
      #   run: |
      #     cd qa-test/backend-testing
      #     npm install
      #     BASEDIR=${{ github.workspace }} npx playwright test

      # - name: Show logs
      #   if: ${{ ! cancelled() }}
      #   run: |
      #     echo "================= Start of test-engine log ================="
      #     cat test-engine-app/engine.log
      #     echo "================= Start of apigw log ================="
      #     cat ai-verify-apigw/apigw.log
      #     echo "================= Start of portal log ================="
      #     cat ai-verify-portal/portal.log