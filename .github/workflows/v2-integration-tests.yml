# Integration Tests
# Build aiverify and run QA test suites

name: v2 Integration Tests

env:
  GITHUB_TOKEN: ${{ github.token }}

on:
  # Run this workflow everyday at 6:05pm Singapore Time (10:05am UTC)
  schedule:
    - cron: "5 10 * * *"

  # Run this workflow manually from Actions tab
  workflow_dispatch:
    inputs:
      branch_to_test:
        description: "Branch or tag to run test"
        required: true
        default: "main"
        type: string

  push:
    branches:
      - "main"

# Allow one concurrent deployment
concurrency:
  group: ${{ github.repository }}-${{ github.workflow }}
  cancel-in-progress: false

jobs:
  Integration-Test:
    #  Run only on Workflow Dispatch
    if: (github.event_name == 'workflow_dispatch')
    runs-on: self-hosted-aiverify
    timeout-minutes: 360
    permissions:
      id-token: write
      contents: read
      packages: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main
          repository: aiverify-foundation/aiverify

      - name: Checkout Integration Test Code
        uses: actions/checkout@v4
        with:
          ref: main
          repository: aiverify-foundation/aivt-integration-testing
          path: integration-testing

      # Free up disk space before building large Docker images
      - name: Free up disk space
        run: |
          bash .ci/free_disk_space.sh

      # Log in to GitHub Container Registry (ghcr.io), needed by Github Actions to access ghcr.io
      - name: Login to GHCR
        run: |
          echo "${{ env.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      # Clean slate to force rebuild all images
      - name: Delete all local Docker images
        run: |
          docker ps -q | xargs -r docker stop
          docker images -q | xargs -r docker rmi -f
          docker system prune -a -f --volumes
          docker builder prune -f

      # Launch containers in Docker Compose
      - name: Run images in Docker Compose
        run: |
          cd deployment/docker-compose-dev
          COMPOSE_DOCKER_CLI_BUILD=1 DOCKER_BUILDKIT=1 docker-compose --profile automated-tests-docker --profile portal up -d

      - name: Run Integration Test
        if: ${{ ! cancelled() }}
        run: |
          cd integration-testing
          npm install
          # bash ${GITHUB_WORKSPACE}/.ci/free_disk_space.sh
          npx playwright install --with-deps
          URL=http://127.0.0.1 PORT_NUMBER=4000 ROOT_FOLDER=${GITHUB_WORKSPACE}/stock-plugins/user_defined_files npx playwright test tests/apigw/

      # - name: Run backend tests
      #   if: ${{ ! cancelled() }}
      #   run: |
      #     cd qa-test/backend-testing
      #     npm install
      #     BASEDIR=${{ github.workspace }} npx playwright test

      # - name: Show logs
      #   if: ${{ ! cancelled() }}
      #   run: |
      #     echo "================= Start of test-engine log ================="
      #     cat test-engine-app/engine.log
      #     echo "================= Start of apigw log ================="
      #     cat ai-verify-apigw/apigw.log
      #     echo "================= Start of portal log ================="
      #     cat ai-verify-portal/portal.log
