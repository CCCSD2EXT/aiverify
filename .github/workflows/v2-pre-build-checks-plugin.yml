# Pre-build Checks
# 1. Unit tests with code coverage (pytest)
# 2. Code quality analysis (flake8)
# 3. Dependency analysis (vulnerabilities)
# 4. Dependency analysis (copyleft licenses)

name: v2 Pre-build Checks (plugin)

on:
  # Runs when a pull request to main is being assigned
  pull_request:
    types: [ assigned, synchronize ]
    branches:
      - 'main'
    paths:
      - 'stock-plugins/aiverify.stock.accumulated-local-effect/**'

  # Run this workflow manually from Actions tab
  workflow_dispatch:
    inputs:
      branch_to_test:
        description: 'Branch or tag to run test'
        required: true
        default: 'v2.x'
        type: string

  push:
    branches: [ "ci/v2-workflows" ]

# Allow one concurrent deployment
concurrency:
  group: ${{ github.repository }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:

  pre-build-checks:
    # Run only when PR is assigned, even on subsequent commits (i.e. synchronize)
    if: (github.event_name == 'pull_request' && github.event.pull_request.assignee != null) || github.event_name == 'workflow_dispatch'

    runs-on: ubuntu-latest
    timeout-minutes: 40

    steps:

      - name: Set branch variable (pull_request)
        if: github.event_name == 'pull_request'
        run: |
          echo "MS_BRANCH=${{ github.event.pull_request.head.ref }}" >> "$GITHUB_ENV"
          echo "PR_NUM=#${{ github.event.pull_request.number }}" >> "$GITHUB_ENV"

      - name: Set branch variable (workflow_dispatch)
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "MS_BRANCH=${{ inputs.branch_to_test }}" >> "$GITHUB_ENV"
          echo "PR_NUM=#0" >> "$GITHUB_ENV"

      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ env.MS_BRANCH }}
          sparse-checkout: |
            stock-plugins/aiverify.stock.accumulated-local-effect/algorithms/accumulated_local_effect
            .ci

      # Setup python    
      - name: Setup python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip'
          cache-dependency-path: stock-plugins

      # Install dependencies
      - name: Install dependencies
        working-directory: ${{ github.workspace }}/stock-plugins/aiverify.stock.accumulated-local-effect/algorithms/accumulated_local_effect
        run: |
          pip install .
          pip install pytest pytest-mock pytest-html pytest-json pytest-cov coverage anybadge
          pip install flake8 flake8-html

      # Check 1: Unit tests & coverage    
      - name: Unit tests with coverage
        working-directory: ${{ github.workspace }}/stock-plugins/aiverify.stock.accumulated-local-effect/algorithms/accumulated_local_effect
        if: ${{ ! cancelled() }}
        timeout-minutes: 30
        run: |      
            set +e
            bash ../../../../.ci/run-test.sh aiverify_accumulated_local_effect -m
            source ../../../../.ci/gen_pre_build_summ.sh test
            test_status=$?
            source ../../../../.ci/gen_pre_build_summ.sh coverage
            coverage_status=$?
            echo "UNIT_TESTS_STATUS=$UNITTEST_SUMMARY" >> $GITHUB_ENV
            echo "CODE_COVERAGE_STATUS=$COVERAGE_SUMMARY" >> $GITHUB_ENV
            set -e
            if [ $test_status -ne 0 ] || [ $coverage_status -ne 0 ]; then
                exit 1
            fi

