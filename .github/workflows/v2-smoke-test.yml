# Smoke Test

name: v2 Smoke Test

env:
  GITHUB_TOKEN: ${{ github.token }}

on:
  # Runs when a pull request review is being submitted
  pull_request:
    types: [assigned, synchronize]
    branches:
      - "main"

  # Run this workflow manually from Actions tab
  workflow_dispatch:
    inputs:
      branch_to_test:
        description: "Branch or tag to run test"
        required: true
        default: "main"
        type: string

# Allow one concurrent deployment
concurrency:
  group: ${{ github.repository }}-${{ github.workflow }}
  cancel-in-progress: false

jobs:
  smoke-test:
    #  Run only when PR is approved
    if: (github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' || github.event_name == 'push')
    runs-on: self-hosted-aiverify
    permissions:
      id-token: write
      contents: read
      packages: write
    timeout-minutes: 360

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          repository: aiverify-foundation/aiverify

      - name: Checkout Smoke Test Code
        uses: actions/checkout@v4
        with:
          ref: main
          repository: aiverify-foundation/aivt-integration-testing
          path: integration-testing

      # Free up disk space before building large Docker images
      - name: Free up disk space
        run: |
          bash .ci/free_disk_space.sh

      # Log in to GitHub Container Registry (ghcr.io), needed by Github Actions to access ghcr.io
      - name: Login to GHCR
        run: |
          echo "${{ env.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      # Clean slate to force rebuild all images
      - name: Delete all local Docker images
        run: |
          docker ps -q | xargs -r docker stop
          docker images -q | xargs -r docker rmi -f
          docker system prune -a -f --volumes
          docker builder prune -f

      # Launch containers in Docker Compose
      - name: Run images in Docker Compose
        run: |
          cd deployment/docker-compose-dev
          echo ${GITHUB_WORKSPACE}
          COMPOSE_DOCKER_CLI_BUILD=1 DOCKER_BUILDKIT=1 docker-compose --profile automated-tests-docker --profile portal up -d

      # Run Smoke Test
      - name: Run Smoke Test
        run: |
          cd integration-testing
          npm install
          npx playwright install --with-deps
          URL=http://127.0.0.1 PORT_NUMBER=3000 ROOT_FOLDER="${{ github.workspace }}/stock-plugins/user_defined_files" npx playwright test tests/portal/workflows.spec.js

      # Upload Playwright Traces
      - name: Upload Playwright Traces
        uses: actions/upload-artifact@v4
        with:
          name: playwright-trace-v2.0-smoke-testing-${{ github.run_id }}
          path: |
            ${{ github.workspace }}/smoke-testing/test-results/
